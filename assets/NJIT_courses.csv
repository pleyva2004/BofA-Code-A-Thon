title,description
BNFO 135. Programming for Bioinformatics.,"The ability to use existing programs and to write small programs to access bioinformatics information or to combine and manipulate various existing bioinformatics programs has become a valuable part of the skill set of anyone working with biomolecular or genetic data. This course provides an understanding of the architecture of bioinformatics toolkits and experience in writing small bioinformatics programs using one or more of the scripting (""glue"") languages frequently employed for such tasks."
BNFO 236. Programming for Bioinformatics II.,Please provide the title and the text for analysis.
BNFO 330. Princ of Bioinformatics II.,Please provide the title of the course and the accompanying text you would like me to analyze.
BNFO 340. Data Analysis for Bioinformatics II.,Please provide the text and title of the course for analysis.
BNFO 491. Bioinformatics Senior Project.,"An introduction to programming and problem solving skills using Python or other very high level language. Topics include basic strategies for problem solving, constructs that control the flow of execution of a program and the use of high level data types such as lists, strings and dictionaries in problem representation. The course also presents an overview of selected topics in computing, such as networking and databases."
CS 101. Computer Programming and Problem Solving.,"An introductory course that is designed for engineering freshmen. This course introduces students to the engineering problem solving process in the context of MATLAB. The emphasis is on the logical analysis of a problem and the formulation of a computer program leading to its solution. Topics include basic concepts of computer systems, algorithm design, programming languages and data abstraction. At the end of class, a comparison between MATLAB and C/C++ will be discussed to provide students a better understanding of the general concept of computer programming."
CS 103. Computer Science with Business Problems.,"An introductory course in computer science, with applications to business and managerial decision making. Topics include basic concepts of computer systems, software engineering, algorithm design, programming languages and abstraction, with applications."
CS 104. Computer Programming and Graphics Problems.,"An introductory course in computer science with applications in computer graphics for architecture. Emphasis on programming methodology using a high level language as the vehicle to illustrate the concepts. Topics include basic concepts of computer systems, software engineering, algorithm design, programming languages and data abstraction, with applications."
CS 106. Introduction to Computing.,"An introduction to programming and problem solving skills for non-computing majors using Python programming languages. Topics include basic strategies for problem solving, constructs that control the flow execution of a program and the use of high level data types such as lists, strings, and dictionaries in problem representation. The course also presents an overview of selected ""big idea"" topics in computing."
CS 113. Introduction to Computer Science I.,"Fundamentals of computer science are introduced, with emphasis on programming methodology and problem solving. Topics include basic concepts of computer systems, software engineering, algorithm design, programming languages and data abstraction, with applications. The high level language C++ is fully discussed and serves as the vehicle to illustrate many of the concepts. CS majors should enroll in CS 113."
CS 116 Introduction to Computer Science II in C++,Please provide the title and the text for processing.
CS 210. Technical History of Computing.,"This course is for students in computing majors. Students will gain a comprehensive overview of the evolution of computing from the start of recorded history through modern times. By studying history, you will understand the context of modern developments in CS/IT, including cyclical trends and why various approaches did or did not work. Learning where it all came from will also help young computer scientists to speak intelligently with older colleagues and managers in the workforce. Topics include mechanical calculating, analog computing, relay/tube computers, transistors, integrated circuits, I/O such as punch cards/paper tape/floppy disks, the minicomputer generation, the microcomputer revolution, development of graphical and network systems, early mobile computer, and modern history. A special focus on historic developments in New Jersey will be part of all lectures."
CS 241 Foundations of Computer Science I,"This is a description. 

**Description:**

This course introduces students to the core concepts and skills necessary for the development of games utilizing 2D graphics. Students will learn how to set up and program their own 2D graphics based game engine. The engine will integrate 2D graphics, audio, input handling and network socket programming. Students will learn how to utilize their own custom 2D graphics and sounds into their projects. Once complete, students will have created two fully functional games."
CS 280. Programming Language Concepts.,"The course covers Linux programming with Apache Web and MySql database using Php/Python and C as primary languages. It consists of four stages: basic tools such as Bash and C programming; searching trees and matrix computing, end-to-end applications such as one that constantly presents top 100 stocks; and extending the applications to run on multiple machines. The course provides students with hands-on experience for programming relatively large applications."
Please provide the text you would like me to analyze.,Please provide the text and title so that I can analyze them for you.
CS 301. Introduction to Data Science.,"This course provides an introduction to automata theory, computability theory, and complexity theory. Theoretical models such as finite-state machines, push-down stack machines, and Turing machines are developed and related to issues in programming language theory. Also, the course covers undecidability and complexity classes P, NP, and NPC."
CS 350. Intro to Computer Systems.,"Prerequisite: CS 280 with a grade C or better. An introduction to the organization and architecture of computer systems, including the standard Von Neumann model and more recent architectural concepts. Among the topics covered are numeric data representation, assembly language organization, memory addressing, memory systems, both real and virtual, coding and compression, input/output structures treated as programmed, interrupt, and direct memory access, and functional organization of the CPU and the computer system."
CS 351. Introduction to Cybersecurity.,"Prerequisites: CS 241 and CS 356 with a grade C or better. This course will give a broad overview of cybersecurity. There are two main goals of this course. First, students will learn fundamental concepts of cybersecurity. Second, this course will help students gain knowledge of the applications to computer systems and communication security. Topics include basics of cryptography, access control, malware, software security, storage and file security, operating-system security, database security and secure communication protocols."
CS 356. Introduction to Computer Networks.,"This course provides an introduction to computer networks, with a special focus on Internet architecture and protocols. Topics include layered-network architectures, addressing, naming, forwarding, routing, communication reliability, the client-server model, web and email protocols. Besides the theoretical foundations, students acquire practical experience by programming reduced versions of real Internet protocols."
CS 357.  Fundamentals of Network Security.,This text is a description.
CS 366. 3D Game Development.,This is a description.
CS 370. Introduction to Artificial Intelligence.,"Prerequisites: CS 114, MATH 337, and CS 241 with a grade of C or better. Accelerated by the surge in data availability and computation capabilities, Artificial intelligence (AI) techniques have become central to modern technological areas, such as natural language processing, computer vision, and robotics. This course addresses the theoretical foundation, methodologies, and applications of AI. Key topics include planning and problem-solving, knowledge representation, reasoning and learning paradigms, and AI's core mechanisms and applications."
CS 375. Introduction to Machine Learning.,"This is an introductory course to Machine Learning (ML). It consists of: (i) A smooth, example-based presentation of the fundamental notions of ML via simple algorithms and visualizable ""toy"" data sets. (ii) A tour of a selection of widely-used machine learning algorithms, including supervised, unsupervised, and reinforcement-based techniques, with applications on real data sets. The students are expected to implement basic algorithms and experiment with existing widely-used ML software libraries on real datasets. They will also gain exposure to the full development of an ML system via a course project."
CS 388. Android Application Development.,Please provide the text you would like me to analyze.
CS 408. Cryptography and Internet Security.,"The course covers the basic concepts of traditional files and file processing, provides a ""classic"" introduction to the relational data model and its languages, and discusses database design methodology and application developments. Students are expected to learn the design of database application systems through a small project and to get some practical hands-on experience with commercial database management systems (DBMS) by writing application programs using the commercial DBMS query languages."
CS 435. Advanced Data Structures and Algorithm Design.,"This is a description. 

""This course is an intensive study of the fundamentals of image processing, analysis and understanding. Topics to be covered include: a brief review of the necessary mathematical tools, human visual perception, sampling and quantization, image transformation, enhancement, restoration, compression, reconstruction, image geometric transformation, matching, segmentation, feature extraction, representation and description, recognition and interpretation."""
CS 440.  Computer Vision.,"This is a description. 

""This course provides a broad coverage of topics on big data generation, transfer, storage, management, computing, and analytics with focus on state-of-the-art technologies and tools used in big data systems such as Hadoop. Real-life big-data applications and workflows in various domains are introduced as use cases to illustrate the development and execution of emerging big data-oriented solutions using HDFS, HBase, MapReduce/Spark, etc. deployed in cloud-based cluster environments."""
CS 450. Data Visualization.,"Prerequisite: CS 351 with a grade C or better. This course provides both an in-depth theoretical study and a practical exposure to technologies that are critical in providing secure communication over the Internet. Topics include remote access security, web security, wireless security, e-mail security, spam and spam filtering techniques, computer viruses and internet worms, honeypots and honeynets, security liability issues and compliance."
CS 482. Data Mining.,Independent Study in Computer Science
CS 489. Computer Science Research Project.,"The text is a description:

This course focuses on the methodology for developing software systems. Methods and techniques for functional requirements analysis and specifications, design, coding, testing and proving, integration and maintenance are discussed."
CS 491. Senior Project.,"The Data Science (DS) Capstone Project spans two semesters and is intended to provide a real-world project-based learning experience for seniors in the BS DS program. The overall objectives of this course are to investigate the nature and techniques of a data-oriented computing development project. Projects are provided by faculty members or industry partners, or proposed by students who wish to become entrepreneurs. In DS Capstone I, teams of project participants will carry out market research, identify appropriate data science problems, collect and preprocess the needed data, define performance metrics, perform risk analysis, and finish an overall design of their solution that integrates various data analytics techniques. The course instructor will mentor and evaluate all projects in conjunction with an entrepreneurship board of industry, faculty, and alumni advisors."
CS 493. Data Science Capstone II.,"The Data Science (DS) Capstone Project spans two semesters and is intended to provide a real-world project-based learning experience for seniors in the BS DS program. The overall objectives of this course are to investigate the nature and techniques of a data-oriented computing development project. Projects are provided by faculty members or industry partners, or proposed by students who wish to become entrepreneurs. In DS Capstone II, teams of project participants will refine their design, implement and integrate component techniques into a complete software solution, present data analysis results, evaluate the system performance, and validate the proposed solution. The course instructor will mentor and evaluate all projects in conjunction with an entrepreneurship board of industry, faculty, and alumni advisors."
