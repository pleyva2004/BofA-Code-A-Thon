{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\BofA-Code-A-Thon\\\\frontend\\\\src\\\\components\\\\UniversitySelector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\n// Move these to environment variables (.env)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst UniversitySelector = () => {\n  _s();\n  const predefinedUniversities = [\"New Jersey Institute of Technology\", \"Rutgers New Brunswick\"];\n  const [selectedUniversity, setSelectedUniversity] = useState(predefinedUniversities[0]);\n  const [newUniversity, setNewUniversity] = useState('');\n  const [message, setMessage] = useState('');\n  const handleAddUniversity = async () => {\n    if (newUniversity.trim() === '') {\n      setMessage(\"Please enter a university name.\");\n      return;\n    }\n    const {\n      data,\n      error\n    } = await supabase.from('university_courses').insert([{\n      university_name: newUniversity,\n      matched_courses: {}\n    }]);\n    if (error) {\n      console.error(\"Error adding university:\", error);\n      setMessage(\"Error adding university.\");\n    } else {\n      setMessage(\"University added successfully!\");\n      setNewUniversity('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row items-center gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"university-dropdown\",\n        className: \"text-2xl font-extrabold text-indigo-600 uppercase tracking-wider\",\n        children: \"Select a university:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"university-dropdown\",\n        value: selectedUniversity,\n        onChange: e => setSelectedUniversity(e.target.value),\n        className: \"rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2\",\n        children: predefinedUniversities.map((uni, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: uni,\n          children: uni\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-600 font-medium\",\n        children: \"or add your university:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter university name\",\n        value: newUniversity,\n        onChange: e => setNewUniversity(e.target.value),\n        className: \"rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddUniversity,\n        className: \"bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors\",\n        children: \"Add University\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-sm ${message.includes('Error') ? 'text-red-600' : 'text-green-600'}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(UniversitySelector, \"fLpLNbFJBE0h4s3epcuGWpPaJks=\");\n_c = UniversitySelector;\nexport default UniversitySelector;\nvar _c;\n$RefreshReg$(_c, \"UniversitySelector\");","map":{"version":3,"names":["React","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_ANON_KEY","supabase","UniversitySelector","_s","predefinedUniversities","selectedUniversity","setSelectedUniversity","newUniversity","setNewUniversity","message","setMessage","handleAddUniversity","trim","data","error","from","insert","university_name","matched_courses","console","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","map","uni","index","type","placeholder","onClick","includes","_c","$RefreshReg$"],"sources":["C:/Users/victo/BofA-Code-A-Thon/frontend/src/components/UniversitySelector.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Move these to environment variables (.env)\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\nconst supabase = createClient(supabaseUrl!, supabaseKey!);\r\n\r\nconst UniversitySelector: React.FC = () => {\r\n  const predefinedUniversities = [\r\n    \"New Jersey Institute of Technology\",\r\n    \"Rutgers New Brunswick\"\r\n  ];\r\n\r\n  const [selectedUniversity, setSelectedUniversity] = useState(predefinedUniversities[0]);\r\n  const [newUniversity, setNewUniversity] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleAddUniversity = async () => {\r\n    if (newUniversity.trim() === '') {\r\n      setMessage(\"Please enter a university name.\");\r\n      return;\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('university_courses')\r\n      .insert([{ university_name: newUniversity, matched_courses: {} }]);\r\n\r\n    if (error) {\r\n      console.error(\"Error adding university:\", error);\r\n      setMessage(\"Error adding university.\");\r\n    } else {\r\n      setMessage(\"University added successfully!\");\r\n      setNewUniversity('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center p-5\">\r\n      <div className=\"flex flex-col md:flex-row items-center gap-4\">\r\n        <label \r\n          htmlFor=\"university-dropdown\" \r\n          className=\"text-2xl font-extrabold text-indigo-600 uppercase tracking-wider\"\r\n        >\r\n          Select a university:\r\n        </label>\r\n        \r\n        <select\r\n          id=\"university-dropdown\"\r\n          value={selectedUniversity}\r\n          onChange={(e) => setSelectedUniversity(e.target.value)}\r\n          className=\"rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2\"\r\n        >\r\n          {predefinedUniversities.map((uni, index) => (\r\n            <option key={index} value={uni}>{uni}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <span className=\"text-gray-600 font-medium\">or add your university:</span>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter university name\"\r\n          value={newUniversity}\r\n          onChange={(e) => setNewUniversity(e.target.value)}\r\n          className=\"rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2\"\r\n        />\r\n\r\n        <button \r\n          onClick={handleAddUniversity}\r\n          className=\"bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors\"\r\n        >\r\n          Add University\r\n        </button>\r\n\r\n        {message && (\r\n          <p className={`text-sm ${message.includes('Error') ? 'text-red-600' : 'text-green-600'}`}>\r\n            {message}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UniversitySelector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,uBAAuB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,WAAW,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;AAC3D,MAAMC,QAAQ,GAAGT,YAAY,CAACG,WAAW,EAAGI,WAAY,CAAC;AAEzD,MAAMG,kBAA4B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAMC,sBAAsB,GAAG,CAC7B,oCAAoC,EACpC,uBAAuB,CACxB;EAED,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAACa,sBAAsB,CAAC,CAAC,CAAC,CAAC;EACvF,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMoB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAIJ,aAAa,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC/BF,UAAU,CAAC,iCAAiC,CAAC;MAC7C;IACF;IAEA,MAAM;MAAEG,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMb,QAAQ,CACnCc,IAAI,CAAC,oBAAoB,CAAC,CAC1BC,MAAM,CAAC,CAAC;MAAEC,eAAe,EAAEV,aAAa;MAAEW,eAAe,EAAE,CAAC;IAAE,CAAC,CAAC,CAAC;IAEpE,IAAIJ,KAAK,EAAE;MACTK,OAAO,CAACL,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDJ,UAAU,CAAC,0BAA0B,CAAC;IACxC,CAAC,MAAM;MACLA,UAAU,CAAC,gCAAgC,CAAC;MAC5CF,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;EAED,oBACEd,OAAA;IAAK0B,SAAS,EAAC,sCAAsC;IAAAC,QAAA,eACnD3B,OAAA;MAAK0B,SAAS,EAAC,8CAA8C;MAAAC,QAAA,gBAC3D3B,OAAA;QACE4B,OAAO,EAAC,qBAAqB;QAC7BF,SAAS,EAAC,kEAAkE;QAAAC,QAAA,EAC7E;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAERhC,OAAA;QACEiC,EAAE,EAAC,qBAAqB;QACxBC,KAAK,EAAEvB,kBAAmB;QAC1BwB,QAAQ,EAAGC,CAAC,IAAKxB,qBAAqB,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACvDR,SAAS,EAAC,8FAA8F;QAAAC,QAAA,EAEvGjB,sBAAsB,CAAC4B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrCxC,OAAA;UAAoBkC,KAAK,EAAEK,GAAI;UAAAZ,QAAA,EAAEY;QAAG,GAAvBC,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2B,CAC9C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAEThC,OAAA;QAAM0B,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAE1EhC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,uBAAuB;QACnCR,KAAK,EAAErB,aAAc;QACrBsB,QAAQ,EAAGC,CAAC,IAAKtB,gBAAgB,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAClDR,SAAS,EAAC;MAA8F;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzG,CAAC,eAEFhC,OAAA;QACE2C,OAAO,EAAE1B,mBAAoB;QAC7BS,SAAS,EAAC,qFAAqF;QAAAC,QAAA,EAChG;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERjB,OAAO,iBACNf,OAAA;QAAG0B,SAAS,EAAE,WAAWX,OAAO,CAAC6B,QAAQ,CAAC,OAAO,CAAC,GAAG,cAAc,GAAG,gBAAgB,EAAG;QAAAjB,QAAA,EACtFZ;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3EID,kBAA4B;AAAAqC,EAAA,GAA5BrC,kBAA4B;AA6ElC,eAAeA,kBAAkB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}