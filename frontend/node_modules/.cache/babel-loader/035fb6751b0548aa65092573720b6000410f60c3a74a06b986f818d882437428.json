{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\BofA-Code-A-Thon\\\\frontend\\\\src\\\\components\\\\UniversitySelector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\n// Move these to environment variables (.env)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = \"https://buwbxnzdbgszvfqxmgfy.supabase.co\";\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ1d2J4bnpkYmdzenZmcXhtZ2Z5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2Mjc4ODQsImV4cCI6MjA1ODIwMzg4NH0.ZLLi-76N_X2t-2NUpbVj1VWHhVT6nMkPZCoAYdbKa50\";\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst UniversitySelector = () => {\n  _s();\n  // Predefined universities for the dropdown\n  const predefinedUniversities = [\"New Jersey Institute of Technology\", \"Rutgers New Brunswick\", \"University of Texas, Arlington\", \"North Carolina A&T University\", \"Kennesaw State University\", \"Howard University\", \"Tennessee State University\", \"Johnson C. Smith University\", \"University of North Carolina, Charlotte\"];\n  const [selectedUniversity, setSelectedUniversity] = useState(predefinedUniversities[0]);\n  const [newUniversity, setNewUniversity] = useState('');\n  const [message, setMessage] = useState('');\n  const handleAddUniversity = async () => {\n    if (newUniversity.trim() === '') {\n      setMessage(\"Please enter a university name.\");\n      return;\n    }\n    // Insert the new university into the 'university_courses' table with a dummy JSON object for matched_courses.\n    const {\n      data,\n      error\n    } = await supabase.from('university_courses').insert([{\n      university_name: newUniversity,\n      matched_courses: {}\n    }]);\n    if (error) {\n      console.error(\"Error adding university:\", error);\n      setMessage(\"Error adding university.\");\n    } else {\n      console.log(\"Added university:\", data);\n      setMessage(\"University added successfully!\");\n      // Optionally clear the input field\n      setNewUniversity('');\n    }\n  };\n  const initializeUniversities = async () => {\n    const universities = [\"New Jersey Institute of Technology\", \"Rutgers New Brunswick\", \"University of Texas, Arlington\", \"North Carolina A&T University\", \"Kennesaw State University\", \"Howard University\", \"Tennessee State University\", \"Johnson C. Smith University\", \"University of North Carolina, Charlotte\"];\n    for (const university of universities) {\n      const {\n        data,\n        error\n      } = await supabase.from('university_courses').insert([{\n        university_name: university,\n        matched_courses: {}\n      }]).select();\n      if (error) {\n        console.error(`Error adding ${university}:`, error);\n      } else {\n        console.log(`Added ${university} successfully`);\n      }\n    }\n  };\n  useEffect(() => {\n    initializeUniversities();\n  }, []);\n  return (\n    /*#__PURE__*/\n    //fix the style of the dropdown later\n    _jsxDEV(\"div\", {\n      className: \"flex justify-center items-center p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"university-dropdown\",\n          className: \"text-2xl font-extrabold text-indigo-600 uppercase tracking-wider\",\n          children: \"Select a university:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"university-dropdown\",\n          value: selectedUniversity,\n          onChange: e => setSelectedUniversity(e.target.value),\n          className: \"rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2\",\n          children: predefinedUniversities.map((uni, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: uni,\n            children: uni\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600 font-medium\",\n          children: \"or add your university:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter university name\",\n          value: newUniversity,\n          onChange: e => setNewUniversity(e.target.value),\n          className: \"rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddUniversity,\n          className: \"bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors\",\n          children: \"Add University\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-sm ${message.includes('Error') ? 'text-red-600' : 'text-green-600'}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(UniversitySelector, \"M5jV4bFT2oNew+IIRhce4XHo+Qw=\");\n_c = UniversitySelector;\nexport default UniversitySelector;\nvar _c;\n$RefreshReg$(_c, \"UniversitySelector\");","map":{"version":3,"names":["React","useState","useEffect","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseKey","supabase","UniversitySelector","_s","predefinedUniversities","selectedUniversity","setSelectedUniversity","newUniversity","setNewUniversity","message","setMessage","handleAddUniversity","trim","data","error","from","insert","university_name","matched_courses","console","log","initializeUniversities","universities","university","select","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","map","uni","index","type","placeholder","onClick","includes","_c","$RefreshReg$"],"sources":["C:/Users/victo/BofA-Code-A-Thon/frontend/src/components/UniversitySelector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Move these to environment variables (.env)\r\nconst supabaseUrl = \"https://buwbxnzdbgszvfqxmgfy.supabase.co\";\r\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ1d2J4bnpkYmdzenZmcXhtZ2Z5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2Mjc4ODQsImV4cCI6MjA1ODIwMzg4NH0.ZLLi-76N_X2t-2NUpbVj1VWHhVT6nMkPZCoAYdbKa50\";\r\nconst supabase = createClient(supabaseUrl!, supabaseKey!);\r\n\r\nconst UniversitySelector: React.FC = () => {\r\n  // Predefined universities for the dropdown\r\n  const predefinedUniversities = [\r\n    \"New Jersey Institute of Technology\",\r\n    \"Rutgers New Brunswick\",\r\n    \"University of Texas, Arlington\",\r\n    \"North Carolina A&T University\",\r\n    \"Kennesaw State University\",\r\n    \"Howard University\",\r\n    \"Tennessee State University\",\r\n    \"Johnson C. Smith University\",\r\n    \"University of North Carolina, Charlotte\"\r\n  ];\r\n  \r\n  const [selectedUniversity, setSelectedUniversity] = useState(predefinedUniversities[0]);\r\n  const [newUniversity, setNewUniversity] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleAddUniversity = async () => {\r\n    if (newUniversity.trim() === '') {\r\n      setMessage(\"Please enter a university name.\");\r\n      return;\r\n    }\r\n    // Insert the new university into the 'university_courses' table with a dummy JSON object for matched_courses.\r\n    const { data, error } = await supabase\r\n      .from('university_courses')\r\n      .insert([{ university_name: newUniversity, matched_courses: {} }]);\r\n\r\n    if (error) {\r\n      console.error(\"Error adding university:\", error);\r\n      setMessage(\"Error adding university.\");\r\n    } else {\r\n      console.log(\"Added university:\", data);\r\n      setMessage(\"University added successfully!\");\r\n      // Optionally clear the input field\r\n      setNewUniversity('');\r\n    }\r\n  };\r\n\r\n  const initializeUniversities = async () => {\r\n    const universities = [\r\n      \"New Jersey Institute of Technology\",\r\n      \"Rutgers New Brunswick\",\r\n      \"University of Texas, Arlington\",\r\n      \"North Carolina A&T University\",\r\n      \"Kennesaw State University\",\r\n      \"Howard University\",\r\n      \"Tennessee State University\",\r\n      \"Johnson C. Smith University\",\r\n      \"University of North Carolina, Charlotte\"\r\n    ];\r\n\r\n    for (const university of universities) {\r\n      const { data, error } = await supabase\r\n        .from('university_courses')\r\n        .insert([{ \r\n          university_name: university, \r\n          matched_courses: {} \r\n        }])\r\n        .select();\r\n\r\n      if (error) {\r\n        console.error(`Error adding ${university}:`, error);\r\n      } else {\r\n        console.log(`Added ${university} successfully`);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initializeUniversities();\r\n  }, []);\r\n\r\n  return (\r\n    //fix the style of the dropdown later\r\n    <div className=\"flex justify-center items-center p-5\">\r\n      <div className=\"flex flex-col md:flex-row items-center gap-4\">\r\n        <label \r\n          htmlFor=\"university-dropdown\" \r\n          className=\"text-2xl font-extrabold text-indigo-600 uppercase tracking-wider\"\r\n        >\r\n          Select a university:\r\n        </label>\r\n        \r\n        <select\r\n          id=\"university-dropdown\"\r\n          value={selectedUniversity}\r\n          onChange={(e) => setSelectedUniversity(e.target.value)}\r\n          className=\"rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2\"\r\n        >\r\n          {predefinedUniversities.map((uni, index) => (\r\n            <option key={index} value={uni}>{uni}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <span className=\"text-gray-600 font-medium\">or add your university:</span>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter university name\"\r\n          value={newUniversity}\r\n          onChange={(e) => setNewUniversity(e.target.value)}\r\n          className=\"rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2\"\r\n        />\r\n\r\n        <button \r\n          onClick={handleAddUniversity}\r\n          className=\"bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors\"\r\n        >\r\n          Add University\r\n        </button>\r\n\r\n        {message && (\r\n          <p className={`text-sm ${message.includes('Error') ? 'text-red-600' : 'text-green-600'}`}>\r\n            {message}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UniversitySelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}